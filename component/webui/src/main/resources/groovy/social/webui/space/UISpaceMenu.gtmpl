<%
/*
<!--
    Copyright (C) 2003-2011 eXo Platform SAS.

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program. If not, see <http://www.gnu.org/licenses/>.

-->
*/
%>
<%
  import org.exoplatform.portal.webui.util.Util;
  import org.exoplatform.social.webui.Utils;
  import org.exoplatform.social.core.space.SpaceUtils;
  import org.exoplatform.social.core.service.LinkProvider;

  def uicomponentId = uicomponent.id;
	
  //SpaceUtils.reloadNavigation();
  def apps = uicomponent.getApps();
  def spaceUrl = SpaceUtils.getSpaceUrl();
  def space = uicomponent.getSpace(spaceUrl);
  def appSelected = uicomponent.getAppSelected();
  def imageSource = uicomponent.getImageSource();
  if (imageSource == null) {
    imageSource = LinkProvider.SPACE_DEFAULT_AVATAR_URL;
  }
  def spaceAvatarTitle = _ctx.appRes("${uicomponentId}.title.SpaceAvatar");
  def srcDefaultAppIcon = "/eXoResources/skin/sharedImages/Icon80x80/DefaultPortlet.png";

  public String getFitString(String nodeLabel, int maxLen) {
    def labelStr = "";
    def labelStrPrev = "";
    def appendLabel = " ...";
    def fitStr = nodeLabel;
    if (fitStr == null) {
      return "";
    }
    if (fitStr.length() > maxLen) {
      def labels = fitStr.split(" ");
      for (i in 0..(labels.size()-1)) {
        labelStr += " ";
        labelStr += labels[i];
        if (labelStr.length() > maxLen) {
          break;
        } else {
          labelStrPrev = labelStr;
        }
      }
      if (labelStrPrev.length() == 0) {
        fitStr = fitStr.substring(0, maxLen - 2) + appendLabel;
      } else {
        fitStr = labelStrPrev + appendLabel;
      }
    }
    return fitStr;
  }

  def spaceName = uicomponent.getSpaceName();
  def spaceNameDisplay = spaceName;
  def homeUrl = Utils.getSpaceHomeURL(space);
  def settingsLabel = _ctx.appRes(uicomponent.getId() + ".label.Settings");
  def titleEditable = _ctx.appRes(uicomponent.getId() + ".label.Editable_Title_Element");
  def jsManager = _ctx.getRequestContext().getJavascriptManager();
  jsManager.require("SHARED/social-ui-space-nav", "editor").addScripts("editor.UISpaceNavigation.addEditability('" + uicomponent.id + "');");
  def srcAppIcon;
%>

<div class="UISpaceMenu" id="UISpaceMenu">
  <div class="SpaceMenuPortlet ClearFix">
    <div class="UISpaceName FL ">
      <a class="Avartar" href="$homeUrl"><img rel="tooltip" data-placement="bottom" title="$spaceAvatarTitle" src="$imageSource" width="35" height="35" /></a>
      <a rel="tooltip" data-placement="bottom" title="$spaceName" href="$homeUrl" class="ProfTitle">$spaceNameDisplay</a>
      <% if (uicomponent.hasSettingPermission()) { %>
      <a class="SpaceSettingIcon" href='$homeUrl/settings' rel="tooltip" data-placement="bottom" title="$settingsLabel"><span>&nbsp</span></a>
      <% }%>
    </div>

    <div class="UIHorizontalTabs">
      <div class="LeftHorizontalTabs">
        <div class="RightHorizontalTabs">
          <div class="CenterHorizontalTabs">
            <div class="TabsContainer">
              <%
                def homeLabel = _ctx.appRes(uicomponent.getId() + ".label.Home");
                srcAppIcon = "/eXoResources/skin/sharedImages/Icon80x80/DefaultPortlet.png"; // need change to Activity icon
              %>
              
              <ul class="nav nav-tabs" id="spaceMenuTab" style="visibility: hidden;">
                <% if (spaceUrl.equals(appSelected)) { %>
                <li class="active"><a data-toggle="tab" onclick="location.href='<%= spaceUrl %>'" href="#"><img src="$srcAppIcon" onError="src='$srcDefaultAppIcon'" />$homeLabel</a></li>
                <% } else { %>
                <li class=""><a data-toggle="tab" onclick="location.href='<%= spaceUrl %>'" href="#"><img src="$srcAppIcon" onError="src='$srcDefaultAppIcon'" /> $homeLabel</a></li>
                <% } %>
              
              
              <%
              for(node in apps) {
                def nodeTitle = node.getResolvedLabel();
                def nodeLabel = getFitString(nodeTitle, 15);
                def nodeUri = node.getURI();
                def uriParts = nodeUri.split("/");
                def nodeName = uriParts[uriParts.length - 1];
                def pageURI = Utils.getSpaceHomeURL(space) + "/" + nodeName;
                srcAppIcon = uicomponent.getAppIcon(node.getPageRef());
                
                if (!nodeName.equals("settings")) {
		              %>
		              <% if(nodeName.equals(appSelected) && uicomponent.hasSettingPermission()) {%>
		                   <li class="active"><a data-toggle="tab" href="#"><img src="$srcAppIcon" onError="src='$srcDefaultAppIcon'" /><span id='$nodeName'>$nodeLabel</span></a></li>
		              <% } else {%>
		                   <li class=""><a data-toggle="tab" onclick="location.href='<%= pageURI %>'" href="#"><img src="$srcAppIcon" onError="src='$srcDefaultAppIcon'" /><span id='$nodeName'>$nodeLabel</span></a></li>
		              <% }%>
              <%
                }
              }
              %>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
