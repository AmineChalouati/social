<%
/*
<!--

    Copyright (C) 2003-2010 eXo Platform SAS.

    This program is free software; you can redistribute it and/or
    modify it under the terms of the GNU Affero General Public License
    as published by the Free Software Foundation; either version 3
    of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, see<http://www.gnu.org/licenses/>.

-->
*/
%>
<%
  import org.exoplatform.webui.core.UIPopupWindow;
  import org.exoplatform.webui.form.UIFormTextAreaInput;
  import org.exoplatform.social.webui.composer.UIComposer;
  import org.exoplatform.social.webui.composer.UIComposer.PostContext;
  import org.exoplatform.social.webui.composer.UIActivityComposerContainer;
  import org.exoplatform.social.webui.composer.UIDefaultActivityComposer;
  import org.exoplatform.social.core.service.LinkProvider;

  def requestContext = _ctx.getRequestContext();

  //trick here, uiform does not keep submitAction for second render, portal bug?
  uicomponent.setSubmitAction("return false;");
  uicomponent.changeTitleTextAreInput();

  def jsManager = requestContext.getJavascriptManager();
  def defaultInput = _ctx.appRes("${uicomponent.id}.input.Write_Something");
  def addLabel = _ctx.appRes("${uicomponent.id}.label.Add");
  def shareLabel = _ctx.appRes("${uicomponent.id}.label.Share");
  def blastInput = "blastInputSpace";
  def shareStatusLabel = _ctx.appRes("${uicomponent.id}.label.ShareStatus");

  if (uicomponent.getPostContext().toString().equals("USER") && uicomponent.isActivityStreamOwner()) {
    defaultInput = _ctx.appRes("${uicomponent.id}.input.What_Are_You_Working_On");
    blastInput = "blastInputPeople";
  }

  def composerId = uicomponent.getChild(UIFormTextAreaInput.class).getId();

  def params = """
    {
      composerId: '${composerId}',
      defaultInput: '${defaultInput}',
      focusColor: null,
      blurColor: null,
      minHeight: null,
      maxHeight: null,
      padding: '11px 0 11px 8px',
      focusHeight: null,
      focusCallback: null,
      blurCallback: null,
      keypressCallback: null,
      postMessageCallback: null
    }
  """

  String foundNoMatch = _ctx.appRes("Mentions.msg.foundNoMatch");
  foundNoMatch = foundNoMatch.replaceAll("'","&#39;").replaceAll('"',"&#34;");
  String helpSearch = _ctx.appRes("Mentions.msg.helpSearch");
  helpSearch = helpSearch.replaceAll("'","&#39;").replaceAll('"',"&#34;");
  String searching = _ctx.appRes("Mentions.msg.searching");
  searching = searching.replaceAll("'","&#39;").replaceAll('"',"&#34;");
  jsManager.require("SHARED/uiForm");
  jsManager.require("SHARED/jquery", "jq")
           .require("SHARED/bts_tooltip").addScripts("jq('*[rel=\"tooltip\"]').tooltip();")
           .require("SHARED/social-ui-activity-composer", "composer")
           .addScripts("UIComposer.onLoadI18n({ helpSearch: \"$helpSearch\", searching: \"searching\", foundNoMatch: \"$foundNoMatch\"});")
           .addScripts("UIComposer.onLoad({composerId:'$uicomponent.id', textareaId:'${uicomponent.COMPOSER_TEXT_AREA_INPUT}'});");
%>
<div class="uiComposer uiGrayLightBox">
  <% uiform.begin() %>
  <div class="blastContainer">
    <div class="$blastInput">
      <% uiform.renderField(uicomponent.COMPOSER_TEXT_AREA_INPUT) %>
    </div>
    <div class="blastShare clearFix">
      <div class="AttachMents">
      $addLabel:
      <%
        def simpleName, labelSimpleName, actionEvent;
        def counter = 0;
        for(acComposer in uicomponent.getActivityComposers()) {
          counter++;
          simpleName = acComposer.getClass().getSimpleName();
          labelSimpleName = _ctx.appRes("UIActivityComposer.label.${simpleName}");

          String action = acComposer.event((acComposer.isDisplayed()) ? "Close" : "Activate") + "; UIComposer.setCurrentValue()";
	      if(simpleName.equals("UILinkActivityComposer")) {
	      	print("<a id=\"actionLink\" onclick=\"$action\"><span></span></a>");
	      	action = "UIComposer.showLink()";
	      }
          	
      %>
          <a href="javascript:void(0)" title="$labelSimpleName" class="$simpleName <%=((counter > 1) ? "DottedLine" : "")%>" onclick="$action">$labelSimpleName</a>
      <%
        }
      %>
      </div>

    <%
      def currentActivityComposer = uicomponent.getActivityComposerManager().getCurrentActivityComposer();

      if (!(currentActivityComposer instanceof UIDefaultActivityComposer)) {
    %>
        <div id="ComposerContainer" class="clearfix">
          <%
            uicomponent.renderChild(UIActivityComposerContainer.class);
          %>
        </div>
    <%
      }
    %>
		<div  class="clearfix">
		 <button class="pull-right btn btn-primary" rel="tooltip" data-placement="bottom" title="$shareLabel" id="ShareButton" type="submit" onclick="<%= uicomponent.event("PostMessage");%>; UIComposer.post()">$shareLabel</button>
		  <div id="ActivityComposerExt" class="attachMents pull-left">
		  <%
			def simpleName, labelSimpleName, actionEvent;
			def counter = 0;
			for(acComposer in uicomponent.getActivityComposers()) {
			  counter++;
			  simpleName = acComposer.getClass().getSimpleName();
			  labelSimpleName = _ctx.appRes("UIActivityComposer.label.${simpleName}");
			  if (acComposer.isDisplayed()) {
				actionEvent = "Close";
			  } else {
				actionEvent = "Activate";
			  }
			  if (counter > 1) {
		  %>
			<a href="javascript:void(0)" rel="tooltip" data-placement="bottom" title="$labelSimpleName" class="actionIcon" onclick="<%= acComposer.event("$actionEvent")%>; UIComposer.setCurrentValue();" ><i class="uiIconSoc$simpleName"></i></a>
		  <% } else { %>
			<a href="javascript:void(0)" rel="tooltip" data-placement="bottom" title="$labelSimpleName" class="actionIcon" onclick="<%= acComposer.event("$actionEvent")%>; UIComposer.setCurrentValue(); " ><i class="uiIconSoc$simpleName"></i></a>
		  <%
			 }
			}
		  %>
		  </div>
		
		  <%
			def isReadyForPostingActivity = currentActivityComposer.isReadyForPostingActivity();
			jsManager.require("SHARED/social-ui-activity-composer", "composer").addScripts("composer.UIComposer.handleShareButton($isReadyForPostingActivity);");
		  %>	  
			
		</div>
	</div>
 </div>
  <% uiform.end()%>
</div>
